<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Monster.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="Monster.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>